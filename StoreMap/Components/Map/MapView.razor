@using StoreMap.Data.Dtos

<div class="map" @attributes=OtherAttributes>
    @foreach (var obj in Store.StoreObjects)
    {
        <StoreShape Data="@obj" @key="obj"></StoreShape>
    }

    @foreach (var item in StoreItems)
    {
        <StoreItem Data="@item" Focused="item.IsFocused"></StoreItem>
    }

    @ChildContent
</div>

<style>
.map {
    border: 1px solid black;
    position: relative;
    width: 100%;
    height: 80vh;
    cursor: crosshair;
}
</style>

@code {
    [Parameter] public RenderFragment ChildContent { get; set; }
    [Parameter] public StoreDto Store { get; set; }
    [Parameter] public List<StoreItemExtendedDto> StoreItems { get; set; }
    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object> OtherAttributes { get; set; }

    protected override void OnParametersSet()
    {
        StoreItems ??= Store.StoreItems.Select(x => new StoreItemExtendedDto(x)).ToList();
    }

}
