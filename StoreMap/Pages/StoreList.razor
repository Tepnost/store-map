@page "/stores"
@using StoreMap.Logic.ServiceContracts
@using StoreMap.Data.Dtos
@using StoreMap.Data.Enums
@using StoreMap.Data.Extensions
@inject IStoreService storeService
@inject NavigationManager navigationManager

@if (stores == null)
{
    <Spin size="large" />
    return;
}

<Table DataSource="@stores" Context="listItem">
    <Column @bind-Field="@listItem.Name">
        <NavLink href="@($"stores/{listItem.Id}")">
            <span class="nav-text">@listItem.Name</span>
        </NavLink>
    </Column>
    <ActionColumn>
        <AuthorizeView Roles="@UserRole.AdminMod.GetRefCodes()">
            <Authorized>
                <Space>
                    <SpaceItem>
                        <Button Class="store-list-edit-btn" OnClick="() => Edit(listItem.Id)">
                            Edit
                        </Button>
                    </SpaceItem>
                    <SpaceItem>
                        <Popconfirm Title="@("Are you sure you want to delete this store?")"
                                    OnConfirm="() => Delete(listItem.Id)"
                                    OkText="Yes"
                                    CancelText="No">
                            <Button Danger Class="store-list-delete-btn" >
                                Delete
                            </Button>
                        </Popconfirm>
                    </SpaceItem>
                </Space>
            </Authorized>
        </AuthorizeView>
    </ActionColumn>
</Table>

@code {
    private List<StoreDto> stores;

    private void Edit(Guid id)
    {
        navigationManager.NavigateTo($"stores/{id}/edit");
    }

    private async void Delete(Guid id)
    {
        var result = await storeService.DeleteStore(id);
        if (!result) return;
        stores = await storeService.GetAllStores();
        StateHasChanged();
    }
    
    protected override async Task OnInitializedAsync()
    {
        stores = await storeService.GetAllStores();
    }
    
}